
Workersafety code merge with multiple branches to one

In foghorn we were developing solution for edgeAI. These are solution which require a Machine learning model to process information on the edge device itself. This won't require to stream data to cloud or even outside the Local network, everything happens on site. We developed this solution called workersafety, which was about monitoring if the workers are following safety norms of site or not. Different site has different norms as per standard operating procedure which workers are mandated to follow. Out solution would allow to track real time if some worker is violating those norms. This project which started as POC for one of the site at saudi Aramco got lots of traction in small amount of time. In saudi Aramco different site would have different team with different requirement so somehow it so happen that diffeent branch of the porject was created over time. Then we also started supporting GPU inferencing so every site code now doubled in number. Once a point in time the whole DS team of the start up was working on the client requirement for workersafety. This was happening because even a small change had to be replicated by individual person in all the branches.

This was a known issue at that time but no one wanted to take the risk of resolving the issue because it could cause the project to fail in production, to maintain status quo people keep on developing in the respective branch.

I knew this issue exist and it need to be resolved at some point in time otherwise the project can't scale. In my 1on1 with my manager I discussed this issue with him and he asked me can this be done and how much time it would take? I said given the complex nature of the project, I have to research on what all need to be done and if it is feasible. At that time different people worked on different aspect of the project and there was no documentation of the code-base. I took it as a task and disucssed the project with all the team mates in 1on1 discussion on understanding the part of the code they have coded and overtime develop a through understnading of the project and documented the requirements of different client. From my study I developed a basic artchitecture of the code on how could we support different client from a single code base. Which involves seprating the site specific logics in different modules of the code. For example Wasit requires HeavyEquipment logic but Marjan doesn't require it, so we will have a config file in which we set this up and the whole code would be design to run based on the config file only.

I showed this to my manager and got the approval of started working on it along with my teammate, after the goals were clear it was fairly easy to code the whole application in two sprints. We than went on to do a shadow deployement on one site and ran it for some time and observe some issues and resolved them over time. Intitally there was resistance from people on migrating to new code base where they have to learn about new ways of doing things and follow strict rules on code quality. To overcome this We conducted knowledge transfer and sharing of whole project to people working on it. I provided active support on issues people were facing with new code development

Overall the result was the code base was merged into a single branch with trunk based git development and coding practises rules enforced. We included other enhancement like Junit testing module which improved the production stability of the code. Included building process with model and artifact control from Mlflow. Over the time there was only single person handling the workersafety project, working on new requirements while others can be allocated to different new projects. It provide financial viabilty to the project and scalabilty because some of the feature we developed for other clients were also required by new clients, which we can now easily deliver.
